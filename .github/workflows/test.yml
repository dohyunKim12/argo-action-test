# This is a basic workflow to help you get started with Actions

name: Verify ArgoCD app

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  kind:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.3.0
      # - name: cluster info
      #   run: |
      #     kubectl cluster-info
      #     kubectl get pods -n kube-system
      #     echo "current-context:" $(kubectl config current-context)
      #     echo "environment-kubeconfig:" ${KUBECONFIG}
      - name: install argocd
        run: |
          kubectl create namespace argocd
          kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
          kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "NodePort"}}'
          sleep 35
          kubectl get pods -n argocd
          kubectl get svc -n argocd
      - name: install argocd-cli
        run: |
          VERSION=v2.5.2; curl -sL -o argocd https://github.com/argoproj/argo-cd/releases/download/$VERSION/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/argocd

      - name: argocd login 
        uses: nick-fields/retry@v2
        with:
          timeout_seconds: 10
          max_attempts: 10
          command: |
            export password=$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d);
            export nodeport=$(kubectl get svc -n argocd argocd-server -o jsonpath={.spec.ports[?\(@.port==80\)].nodePort});
            export nodeip=$(kubectl get nodes -o jsonpath={.items[0].status.addresses[?\(@.type==\"InternalIP\"\)].address});
            argocd login $nodeip:$nodeport --insecure --username=admin --password=$password
  
      - name: argocd resource deploy
        run: |
          kubectl apply -f application/app_of_apps/.
          argocd app list
      - name: argocd app sync
        run: |
          sleep 10
          argocd app list
          argocd app sync master-applications
          argocd app sync --preview-changes cicd-operator
          argocd app sync --preview-changes cluster-api-provider-vsphere
          argocd app sync --preview-changes catalog-controller
          argocd app sync --preview-changes argocd
          argocd app sync --preview-changes cluster-api
          argocd app sync --preview-changes cluster-api-provider-aws
          argocd app sync --preview-changes cluster-api-provider-vsphere
          argocd app sync --preview-changes gitlab
          argocd app sync --preview-changes grafana-operator
          argocd app sync --preview-changes helm-apiserver
          argocd app sync --preview-changes hyperauth                                                       
          argocd app sync --preview-changes hypercloud                                                      
          argocd app sync --preview-changes hyperregistry                                                   
          argocd app sync --preview-changes image-validating-webhook
          argocd app sync --preview-changes istio        
          argocd app sync --preview-changes jaeger                                                                  
          argocd app sync --preview-changes kiali                                                                   
          argocd app sync --preview-changes loki                                                                    
          argocd app sync --preview-changes opensearch
          argocd app sync --preview-changes prometheus                                                                     
          argocd app sync --preview-changes redis-operator
          argocd app sync --preview-changes service-binding-operator
          argocd app sync --preview-changes single-applications
          argocd app sync --preview-changes tekton-pipeline
          argocd app sync --preview-changes tekton-trigger
          argocd app sync --preview-changes template-service-broker
      - name: Test3
        run: exit 0
        

        



